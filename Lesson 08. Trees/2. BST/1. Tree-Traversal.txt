Tree traversal refers to the process of visiting each node in a tree data structure in a specific order, then storing it in some kind of array


Tree Traversal Types.

Breadth First Search -  is  a way to traverse all the nodes in a tree or graph, add them to a queue, and take their data

BFS in Simple Steps

1. Put Root Node in a Queue

2. Take the node from the front of the queue (currently the root node), process it (which means take it's value and place it in your data array), and then add its neighbors to the queue(left, and right).

3. Repeat: Continue by taking the next node from the front of the queue and repeat until the queue is empty.

 1.                5                 Queue
                 ↙️    ↘️          [  5         ]
                3       8
              ↙️       ↙️  ↘️          Data
            1         7     9     [            ]

 2.                5                 Queue
                 ↙️    ↘️          [  5         ]
                3       8
              ↙️       ↙️  ↘️          Data
            1         7     9     [ 5           ]

3.                 5                 Queue
                 ↙️    ↘️          [  3,   8         ]
                3       8
              ↙️       ↙️  ↘️          Data
            1         7     9     [ 5           ]

4.                 5                 Queue
                 ↙️    ↘️          [  3,   8         ]
                3       8
              ↙️       ↙️  ↘️          Data
            1         7     9     [ 5, 3, 8   ]

5.                 5                 Queue
                 ↙️    ↘️          [  1          ]
                3       8
              ↙️       ↙️  ↘️          Data
            1         7     9     [ 5 3 8   ]

6.                5                 Queue
                 ↙️    ↘️          [  7 9          ]
                3       8
              ↙️       ↙️  ↘️          Data
            1         7     9     [ 5, 3, 8, 1   ]

7.                5                 Queue
                 ↙️    ↘️          [            ]
                3       8
              ↙️       ↙️  ↘️          Data
            1         7     9     [ 5, 3, 8,  1,  7, 9  ]


------------------------------------------------------------------

Depth First Search  (PreOrder) - a way to visit all the nodes in a tree or graph. "Pre-order" means you visit a node before its children. Think of it as a way to explore a tree by diving deep into one branch before moving to another branch.

How Does Pre-Order Traversal Work?

1. Visit the Root Node: Start at the current node (the root or any node you’re currently at). Visit it first.

2. Explore the Left Subtree: Move to the left child node of the current node, and repeat the process from step 1.

3. Explore the Right Subtree: After finishing with the left subtree, move to the right child node of the current node, and repeat the process from step 1.


DFS Pre-Order Example.

                                                A
                                              / \
                                            B   C
                                          / \
                                        D   E

1. Visit A: Start at A, visit it.

2. Move to B: Go to B (left child of A), visit B.

3. Move to D: Go to D (left child of B), visit D. (D has no children)

4. Move to E: Go to E (right child of B), visit E. (E has no children)

5. Move to C: Return to A and move to C 
(right child of  A), visit C. (C has no children)


Depth First Search  (PostOrder) - a method for exploring all nodes in a tree or graph. The difference between Pre and Post is with Post we do not store the root node in the beginning, and instead of processing node from top to bottom we do it from bottom to top, traverse to the last node of a side of the tree then take that node, then move back up, and add each node as we go up then do the same thing for the right side then finally take the root node

------------------------------------------------------------------

Depth First Search (In Order) - a way to explore a binary tree where you visit nodes in a specific sequence. Here’s how it works in the simplest terms:

Depth First Search (In-Order) Explained
1. Start at the Root: Begin at the root of the tree.

2. Explore Left Subtree: Move to the left child of the current node. Repeat this step until you reach the leftmost node.

3. Visit the Current Node: Once you can't go left anymore, visit (or process) the current node.

4. Explore Right Subtree: Move to the right child of the current node and repeat the process from step 2.
5. Repeat: Continue this process until you have visited all nodes in the tree.

DFS (In Order) Example. 

                    A
                  / \
                  B   C
                / \
                D   E

1. Start at A.

2. Move to B (the left child of A).

3. Move to D (the left child of B).

4. D has no left child, so visit D.

5. D has no right child, so go back to B.

6. Visit B.

7. Move to E (the right child of B).

8. E has no left child, so visit E.

9. E has no right child, so go back to A.

10. Visit A.

11.  Move to C (the right child of A).

12. C has no left child, so visit C.

13. C has no right child, so you’re done.
